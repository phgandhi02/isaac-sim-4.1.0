[package]
title = "Isaac Sim"
description = "Base Isaac Sim app"
version = "4.1.0"

# That makes it browsable in UI with "experience" filter
keywords = ["experience", "app", "usd"]

[dependencies]
# Isaac Sim extensions
"omni.isaac.app.setup" = { order = 1000 }
"omni.isaac.asset_browser" = {}
"omni.isaac.assets_check" = { order = 1001 }
"omni.isaac.camera_inspector" = {}
"omni.isaac.cloner" = {}
"omni.isaac.block_world" = {}
"omni.isaac.core" = {}
"omni.isaac.core_archive" = {}
"omni.isaac.core_nodes" = {}
"omni.isaac.debug_draw" = {}
"omni.isaac.dynamic_control" = {}
"omni.isaac.examples" = {}
"omni.isaac.examples_nodes" = {}
"omni.isaac.extension_templates" = {}
"omni.isaac.franka" = {}
"omni.isaac.gain_tuner" = {}
"omni.isaac.gym" = {}
"omni.isaac.import_wizard" = {}
"omni.isaac.kit" = {}
"omni.isaac.lula" = {order = 100}
"omni.isaac.manipulators" = {}
"omni.isaac.manipulators.ui" = {}
"omni.isaac.merge_mesh" = {}
"omni.isaac.menu" = {}
"omni.isaac.ml_archive" = {}
"omni.isaac.motion_generation" = {}
"omni.isaac.nucleus" = {}
"omni.isaac.occupancy_map" = {}
"omni.isaac.occupancy_map.ui" = {}
"omni.isaac.physics_inspector" = {}
"omni.isaac.physics_utilities" = {}
"omni.isaac.quadruped" = {}
"omni.isaac.range_sensor" = {}
"omni.isaac.range_sensor.ui" = {}
"omni.isaac.range_sensor.examples" = {}
"omni.isaac.robot_assembler" = {}
"omni.isaac.robot_description_editor" = {}
"omni.isaac.scene_blox" = {}
"omni.isaac.sensor" = {}
"omni.isaac.surface_gripper" = {}
"omni.isaac.surface_gripper.ui" = {}
"omni.isaac.synthetic_recorder" = {}
"omni.isaac.throttling" = {}
"omni.isaac.ui" = {}
"omni.isaac.universal_robots" = {}
"omni.isaac.utils" = {}
"omni.isaac.version" = {}
"omni.isaac.wheeled_robots.ui" = {}
"omni.isaac.window.about" = {}
"omni.kit.property.isaac" = {}
"omni.pip.cloud" = {}
"omni.pip.compute" = {}
"omni.replicator.core" = {}
"omni.usd.schema.isaac" = {}

# Kit extensions
#"omni.activity.freeze_monitor" = {}
#"omni.activity.profiler" = {}
#"omni.activity.pump" = {}
#"omni.activity.ui" = {}
#"omni.activity.usd_resolver" = {}
"omni.anim.curve.bundle" = {}
"omni.anim.graph.schema" = {}
"omni.anim.navigation.schema" = {}
"omni.anim.shared.core" = {}
"omni.kit.collaboration.channel_manager" = {}
#"omni.curve.manipulator" = {}
#"omni.genproc.bundle" = {}
"omni.graph.bundle.action" = {}
"omni.graph.visualization.nodes" = {}
"omni.graph.window.action" = {}
"omni.graph.window.generic" = {}
"omni.hydra.engine.stats" = {}
"omni.importer.mjcf" = {}
"omni.importer.onshape" = {}
"omni.importer.urdf" = {}
"omni.kit.actions.window" = {}
"omni.kit.asset_converter" = {}
"omni.kit.browser.asset" = {}
"omni.kit.browser.material" = {}
"omni.kit.context_menu" = {}
"omni.kit.converter.cad" = {order = 200}
"omni.kit.graph.delegate.default" = {}
"omni.kit.hotkeys.window" = {}
"omni.kit.loop-isaac" = {}
"omni.kit.manipulator.prim" = {}
"omni.kit.manipulator.transform" = {}
"omni.kit.material.library" = {}
"omni.kit.menu.aov" = {}
"omni.kit.menu.common" = {}
"omni.kit.menu.create" = {}
"omni.kit.menu.edit" = {}
"omni.kit.menu.file" = {}
"omni.kit.menu.stage" = {}
"omni.kit.menu.utils" = {}
"omni.kit.mesh.raycast" = {}
"omni.kit.preferences.animation" = {}
"omni.kit.primitive.mesh" = {}
"omni.kit.profiler.window" = {order = 2000}
"omni.kit.property.bundle" = {}
"omni.kit.property.collection" = {}
"omni.kit.property.layer" = {}
"omni.kit.quicklayout" = {}
"omni.kit.renderer.capture" = {}
"omni.kit.renderer.core" = {}
"omni.kit.scripting" = {}
"omni.kit.search.files" = {}
"omni.kit.selection" = {}
"omni.kit.stage_column.payload" = {}
"omni.kit.stage_column.variant" = {}
"omni.kit.stage_templates" = {}
"omni.kit.stage.copypaste" = {}
"omni.kit.stage.mdl_converter" = {}
"omni.kit.stagerecorder.bundle" = {}
"omni.kit.telemetry" = {}
# "omni.kit.thumbnails.mdl" = {} # brings in legacy_gizmos
"omni.kit.thumbnails.usd" = {}
"omni.kit.tool.asset_exporter" = {}
"omni.kit.tool.asset_importer" = {}
"omni.kit.tool.collect" = {}
"omni.kit.tool.remove_unused.controller" = {}
"omni.kit.tool.remove_unused.core" = {}
"omni.kit.uiapp" = {}
"omni.kit.usda_edit" = {}
"omni.kit.variant.editor" = {}
"omni.kit.variant.presenter" = {}
"omni.kit.viewport_widgets_manager" = {}
"omni.kit.viewport.actions" = {}
"omni.kit.viewport.bundle" = {}
"omni.kit.viewport.menubar.lighting" = {}
"omni.kit.viewport.rtx" = {}
"omni.kit.widget.cache_indicator" = {}
"omni.kit.widget.collection" = {}
"omni.kit.widget.extended_searchfield" = {}
"omni.kit.widget.filebrowser" = {}
"omni.kit.widget.layers" = {}
"omni.kit.widget.live" = {}
"omni.kit.widget.timeline" = {}
"omni.kit.widget.versioning" = {}
"omni.kit.widgets.custom" = {}
"omni.kit.window.collection" = {}
"omni.kit.window.commands" = {}
"omni.kit.window.console" = {}
"omni.kit.window.content_browser" = {}
"omni.kit.window.cursor" = {}
"omni.kit.window.extensions" = {}
"omni.kit.window.file" = {}
"omni.kit.window.filepicker" = {}
"omni.kit.window.material" = {}
"omni.kit.window.material_graph" = {}
"omni.kit.window.preferences" = {}
"omni.kit.window.privacy" = {}
"omni.kit.window.property" = {}
"omni.kit.window.quicksearch" = {}
"omni.kit.window.script_editor" = {}
"omni.kit.window.stage" = {}
"omni.kit.window.stats" = {order = 1000}
"omni.kit.window.status_bar" = {}
"omni.kit.window.title" = {}
"omni.kit.window.toolbar" = {}
"omni.kit.window.usd_paths" = {}
"omni.physx.bundle" = {}
# "omni.physx.fabric" = {}
"omni.physx.tensors" = {}
"omni.replicator.isaac" = {}
"omni.replicator.replicator_yaml" = {}
"omni.resourcemonitor" = {}
"omni.rtx.settings.core" = {}
"omni.simready.explorer" = {}
"omni.stats" = {}
"omni.syntheticdata" = {}
"omni.usd.metrics.assembler.ui" = {}
"omni.usd.metrics.assembler.physics" = {}
"omni.usd.schema.metrics.assembler" = {}
"omni.usd.schema.scene.visualization" = {}
"omni.warp" = {}
"semantics.schema.editor" = {}
"semantics.schema.property" = {}
"omni.isaac.cloner" = {}

[settings]
renderer.active = "rtx"
exts."omni.kit.viewport.menubar.camera".expand = true # Expand the extra-camera settings by default
exts."omni.kit.window.file".useNewFilePicker = true
exts."omni.kit.tool.asset_importer".useNewFilePicker = true
exts."omni.kit.tool.collect".useNewFilePicker = true
exts."omni.kit.widget.layers".useNewFilePicker = true
exts."omni.kit.renderer.core".imgui.enableMips = true
exts."omni.kit.browser.material".enabled = false
exts."omni.kit.browser.asset".visible_after_startup = false
exts."omni.kit.window.material".load_after_startup = true
exts."omni.kit.widget.cloud_share".require_access_code = false
exts."omni.kit.mesh.raycast".bvhBuildOnFirstRequired = true
exts."omni.kit.menu.utils".logDeprecated = false
exts."omni.ui".raster.default_rasterpolicy_enabled = true
exts."omni.kit.widget.graph".raster_nodes = true
app.content.emptyStageOnStart = false
# persistent.app.newStage.defaultTemplate = "default stage"
exts."omni.kit.viewport.window".startup.windowName="Viewport" # Rename from Viewport Next


# deprecate support for old kit.ui.menu
app.menu.legacy_mode = false
# use omni.ui.Menu for the MenuBar
app.menu.compatibility_mode = false
# Setting the port for the embedded http server
exts."omni.services.transport.server.http".port = 8211

# default viewport is fill
app.runLoops.rendering_0.fillResolution = false

exts."omni.kit.test".includeTests = [ "*isaac*" ]
[settings.app.settings]
persistent = true
dev_build = false
fabricDefaultStageFrameHistoryCount = 3 # needed for omni.syntheticdata TODO105 still true?

[settings.app.window]
title = "Isaac Sim"
hideUi = false
_iconSize = 256
iconPath = "${omni.isaac.app.setup}/data/omni.isaac.sim.png"

# width = 1700
# height = 900
# x = -1
# y = -1

# Fonts
[setting.app.font]
file = "${fonts}/OpenSans-SemiBold.ttf"
size = 16

[settings.exts.'omni.kit.window.extensions']
# List extensions here we want to show as featured when extension manager is opened
featuredExts = []


[settings]
# MGPU is always on, you can turn it from the settings, and force this off to save even more resource if you
# only want to use a single GPU on your MGPU system
renderer.multiGpu.enabled = true
renderer.multiGpu.autoEnable = true
# This setting forces all GPUs to copy their render results to the main GPU.
# This legacy setting should not be needed anymore
app.gatherRenderResults = false
'rtx-transient'.resourcemanager.enableTextureStreaming = true
# app.hydra.aperture.conform = 4 # in 105.1 pixels are square by default
# app.hydraEngine.waitIdle = true
rtx.newDenoiser.enabled = true

# Explicitly enable Vulkan (on by default on Linux, off by default on Windows)
app.vulkan = true

# Enable Iray and pxr by setting this to "rtx,iray,pxr"
renderer.enabled = "rtx"

physics.autoPopupSimulationOutputWindow=false

### async rendering settings
omni.replicator.asyncRendering = false
app.asyncRendering = false
app.asyncRenderingLowLatency = false

### Render thread settings
app.runLoops.main.rateLimitEnabled = false
app.runLoops.main.rateLimitFrequency = 120
app.runLoops.main.rateLimitUsePrecisionSleep = true
app.runLoops.main.syncToPresent = false
app.runLoops.present.rateLimitFrequency = 120
app.runLoops.present.rateLimitUsePrecisionSleep = true
app.runLoops.rendering_0.rateLimitFrequency = 120
app.runLoops.rendering_0.rateLimitUsePrecisionSleep = true
app.runLoops.rendering_0.syncToPresent = false
app.runLoops.rendering_1.rateLimitFrequency = 120
app.runLoops.rendering_1.rateLimitUsePrecisionSleep = true
app.runLoops.rendering_1.syncToPresent = false
app.runLoopsGlobal.syncToPresent = false
app.vsync = false
exts.omni.kit.renderer.core.present.enabled = false
exts.omni.kit.renderer.core.present.presentAfterRendering = false
persistent.app.viewport.defaults.tickRate = 120
rtx-transient.dlssg.enabled = false

privacy.externalBuild = true

# Basic Kit App
################################
app.versionFile = "${app}/../VERSION"
app.name = "Isaac-Sim"
app.version = "4.1.0"

# hide NonToggleable Exts
exts."omni.kit.window.extensions".hideNonToggleableExts = true
exts."omni.kit.window.extensions".showFeatureOnly = false

# Hang Detector
################################
# app.hangDetector.enabled = false
# app.hangDetector.timeout = 120


# Browsers
exts."omni.kit.browser.material".folders = [
        "Base::http://omniverse-content-production.s3-us-west-2.amazonaws.com/Materials/Base",
        "vMaterials::http://omniverse-content-production.s3.us-west-2.amazonaws.com/Materials/vMaterials_2/",
        "Twinbru Fabrics::https://twinbru.s3.eu-west-1.amazonaws.com/omniverse/Twinbru Fabrics/"
]

exts."omni.kit.browser.asset".folders = [
        "http://omniverse-content-production.s3-us-west-2.amazonaws.com/Assets/Vegetation",
		"http://omniverse-content-production.s3-us-west-2.amazonaws.com/Assets/ArchVis/Commercial",
		"http://omniverse-content-production.s3-us-west-2.amazonaws.com/Assets/ArchVis/Industrial",
		"http://omniverse-content-production.s3-us-west-2.amazonaws.com/Assets/ArchVis/Residential",
		"http://omniverse-content-production.s3-us-west-2.amazonaws.com/Assets/DigitalTwin/Assets/Warehouse/Equipment",
		"http://omniverse-content-production.s3-us-west-2.amazonaws.com/Assets/DigitalTwin/Assets/Warehouse/Safety",
		"http://omniverse-content-production.s3-us-west-2.amazonaws.com/Assets/DigitalTwin/Assets/Warehouse/Shipping",
		"http://omniverse-content-production.s3-us-west-2.amazonaws.com/Assets/DigitalTwin/Assets/Warehouse/Storage",
    ]

exts."omni.kit.browser.texture".folders = [
        "http://omniverse-content-production.s3-us-west-2.amazonaws.com/Assets/Vegetation",
 ]

# default internal ros2 bridge distro to use if no ros2 distro is sourced
exts."omni.isaac.ros2_bridge".ros_distro = "humble"

# set the default ros bridge to enable on startup
[settings."filter:platform"."windows-x86_64"]
isaac.startup.ros_bridge_extension = ""
[settings."filter:platform"."linux-x86_64"]
isaac.startup.ros_bridge_extension = "omni.isaac.ros2_bridge"

# Content Browser
###############################
[settings.exts."omni.kit.window.content_browser"]
enable_thumbnail_generation_images = false # temp fix to avoid leaking python processes

# Extensions
###############################
[settings.app.extensions]
skipPublishVerification = false
registryEnabled = true

[settings.exts."omni.kit.window.modifier.titlebar"]
titleFormatString = "  Isaac Sim  {version:${app}/../SHORT_VERSION,font_color=0x909090,font_size=16} {separator} {file, board=true}"
showFileFullPath = true
icon.file = "${app}/../exts/omni.isaac.app.setup/data/nvidia-omniverse-isaacsim.ico"
icon.size = 256
defaultFont.name = "Arial"
defaultFont.size = 16
defaultFont.color = 0xD0D0D0
separator.color = 0x00B976
separator.width = 1
windowBorder.color = 0x0F0F0F
windowBorder.width = 2
colors.caption = 0x0F0F0F
colors.client = 0x0F0F0F
respondOnMouseUp = true
changeWindowRegion = true


# Register extension folder from this repo in kit
[settings.app.exts]
folders = ["${app}/../exts", "${app}/../extscache", "${app}/../extsPhysics", "${app}/../extsUser"]

[settings.crashreporter.data]
experience = "Isaac Sim"

# Isaac Sim Settings
###############################
[settings.app.renderer]
skipWhileMinimized = false
sleepMsOnFocus = 0
sleepMsOutOfFocus = 0
resolution.width=1280
resolution.height=720

# default camera position in meters
[settings.app.viewport]
defaultCamPos.x = 5
defaultCamPos.y = 5
defaultCamPos.z = 5

[settings.rtx]
raytracing.fractionalCutoutOpacity = false
hydra.enableSemanticSchema = true
translucency.worldEps = 0.005
mdltranslator.mdlDistilling = false
# descriptorSets=60000
# reservedDescriptors=500000
# sceneDb.maxInstances=1000000
# Enable this for static scenes, improves visual quality
# directLighting.sampledLighting.enabled = true

[settings.persistent]
app.file.recentFiles = []
app.stage.upAxis = "Z"
app.stage.timeCodeRange = [0, 1000000]
app.stage.movePrimInPlace = false
app.stage.instanceableOnCreatingReference = false
app.stage.materialStrength = "weakerThanDescendants"

app.transform.gizmoUseSRT = true
app.camera.controllerUseSRT = true
app.viewport.grid.scale = 1.0
app.viewport.pickingMode = "kind:model.ALL"
app.viewport.camMoveVelocity = 0.05 # 5 m/s
app.viewport.gizmo.scale = 0.01 # scaled to meters
app.viewport.previewOnPeek = false
app.viewport.snapToSurface = false
app.viewport.displayOptions = 31951 # Disable Frame Rate and Resolution by default
app.window.uiStyle = "NvidiaDark"
app.primCreation.DefaultXformOpType = "Scale, Orient, Translate"
app.primCreation.DefaultXformOpOrder="xformOp:translate, xformOp:orient, xformOp:scale"
app.primCreation.typedDefaults.camera.clippingRange = [0.01, 10000000.0]
simulation.minFrameRate = 15
simulation.defaultMetersPerUnit = 1.0
omnigraph.updateToUsd = false
omnigraph.useSchemaPrims = true
omnigraph.disablePrimNodes = true
physics.visualizationDisplayJoints = false
physics.visualizationSimulationOutput = false
omni.replicator.captureOnPlay = true
exts."omni.anim.navigation.core".navMesh.viewNavMesh = false
exts."omni.anim.navigation.core".navMesh.config.autoRebakeOnChanges = false
resourcemonitor.timeBetweenQueries = 100


# Make Detail panel visible by default
app.omniverse.content_browser.options_menu.show_details = true
app.omniverse.filepicker.options_menu.show_details = true

[settings.ngx]
enabled=true # Enable this for DLSS
